# Generated by Django 4.2 on 2025-04-23 07:31

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasicModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=10)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('country', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('street', models.CharField(max_length=50)),
                ('geolocation', models.CharField(max_length=50)),
                ('faq', models.JSONField(default=dict)),
                ('features', models.JSONField(default=dict)),
                ('description', models.JSONField(default=dict)),
                ('images', models.JSONField(default=list)),
                ('places', models.JSONField(default=list)),
                ('rules', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TransferType', models.CharField(choices=[('Train', 'Train'), ('Bus', 'Bus'), ('Domestic Flight', 'Domestic Flight'), ('International Flight', 'International Flight')], db_index=True, max_length=30)),
                ('From', models.CharField(choices=[('Tehran', 'Tehran'), ('Shiraz', 'Shiraz'), ('Mashhad', 'Mashhad'), ('Gheshm', 'Gheshm')], db_index=True, max_length=30)),
                ('To', models.CharField(choices=[('Tehran', 'Tehran'), ('Shiraz', 'Shiraz'), ('Mashhad', 'Mashhad'), ('Gheshm', 'Gheshm'), ('London', 'London')], db_index=True, max_length=30)),
                ('passenger', models.CharField(choices=[('First Class', 'First Class'), ('Economy', 'Economy')], db_index=True, max_length=30)),
                ('Price', models.DecimalField(db_index=True, decimal_places=2, max_digits=10)),
                ('Date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.FloatField()),
                ('currency', models.CharField(max_length=15)),
                ('size', models.CharField(blank=True, max_length=50, null=True)),
                ('features', models.JSONField(default=dict)),
                ('images', models.JSONField(default=list)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
